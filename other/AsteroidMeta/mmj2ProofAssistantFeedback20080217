<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head><title>AsteroidMeta: mmj2ProofAssistantFeedback20080217</title><link type="text/css" rel="stylesheet" href="wiki.css" /><meta name="robots" content="INDEX,NOFOLLOW" /><link rel="alternate" type="application/rss+xml" title="AsteroidMeta" href="index.html@action=rss" /><link rel="alternate" type="application/rss+xml" title="AsteroidMeta: mmj2ProofAssistantFeedback20080217" href="http://planetx.cc.vt.edu/AsteroidMeta?action=rss;rcidonly=mmj2ProofAssistantFeedback20080217" /></head><body class="http://planetx.cc.vt.edu/AsteroidMeta"><div class="header"><span class="gotobar bar"><a class="local" href="HomePage">HomePage</a> <a class="local" href="RecentChanges">RecentChanges</a> </span><h1><a title="Click to search for references to this page" href="http://planetx.cc.vt.edu/AsteroidMeta?search=mmj2ProofAssistantFeedback20080217">mmj2ProofAssistantFeedback20080217</a></h1></div><div class="content browse"><p>Back to: <a class="local" href="mmj2">mmj2</a></p><h1>note about the wiki</h1><p>NOTE: To update the wiki your "username" must be whitelisted. Send an email to the wikilord if you are not already a user – and, if you don't care to do that, I authorize you to post as "ocat" for the purposes of mmj2 feedback and problem reports, etc. (Just put some initials on your edits so I know who is doing what…)</p><p>ALSO, you may get the "Cannot acquire main lock" error message when attempting to post to the wiki. In this case, hit the Back button on your browser, open a new window and go to <a class="local" href="RecentChanges">RecentChanges</a> then click on Administration, then Unlock Wiki. Wait, and then return to your original post and click on "submit" again.</p><h1>other links</h1><p>Previous Version of Feedback: <a class="local" href="mmj2ProofAssistantFeedback20080113">mmj2ProofAssistantFeedback20080113</a></p><p>(Complaints about other aspects of mmj2 &#x2013; general grievances -- should go here: <a class="local" href="mmj2Feedback">mmj2Feedback</a> )</p><h1>Feedback About the mmj2 Proof Assistant GUI</h1><p>Wow, mmj2 <i>works</i> great. I was able to re-prove the first 100 theorems in just 45 minutes!</p><p>(Just kidding&#x2026;but still, it's fast!)</p><p>Here is a new shorter proof for a1dd:</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=a1dd  LOC_AFTER=?
     
    * Deduction introducing a nested embedded antecedent.
    * old
    h1::a1dd.1         |- ( ph -&gt; ( ps -&gt; ch ) )
    2:1:a1d            |- ( ph -&gt; ( th -&gt; ( ps -&gt; ch ) ) )
    qed:2:com23        |- ( ph -&gt; ( ps -&gt; ( th -&gt; ch ) ) )
     
    $)
     </pre><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=a1dd  LOC_AFTER=?
    * new
    * Deduction introducing a nested embedded antecedent.
     
    h1::a1dd.1         |- ( ph -&gt; ( ps -&gt; ch ) )
    2::ax-1            |- ( ch -&gt; ( th -&gt; ch ) )
    qed:1,2:syl6       |- ( ph -&gt; ( ps -&gt; ( th -&gt; ch ) ) )
    $)
     </pre><p>Nice and easy. And&#x2026;</p><p>&#x2014;</p><pre>    ( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=mpdi  LOC_AFTER=?
     
    * A nested modus ponens deduction.
    * old
    h1::mpdi.1         |- ( ps -&gt; ch )
    h2::mpdi.2         |- ( ph -&gt; ( ps -&gt; ( ch -&gt; th ) ) )
    3:2:com12          |- ( ps -&gt; ( ph -&gt; ( ch -&gt; th ) ) )
    4:1,3:mpid         |- ( ps -&gt; ( ph -&gt; th ) )
    qed:4:com12        |- ( ph -&gt; ( ps -&gt; th ) )
     
    $)
     </pre><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=mpdi  LOC_AFTER=?
     
    * A nested modus ponens deduction.
    * new
    h1::mpdi.1         |- ( ps -&gt; ch )
    h2::mpdi.2         |- ( ph -&gt; ( ps -&gt; ( ch -&gt; th ) ) )
    3:1:a1i         |- ( ph -&gt; ( ps -&gt; ch ) )
    qed:3,2:mpdd          |- ( ph -&gt; ( ps -&gt; th ) )
     
    $=  wph wps wch wth wps wch wi wph mpdi.1 a1i mpdi.2 mpdd $. 
    $)
     </pre><hr /><h1>Intuitive proof of loowoz</h1><p>pm2.86 is a <i>key</i> theorem, the significance of which I failed to appreciate until recently&#x2026;</p><p>And in retrospect, the "shorter proof competitition" sometimes obscures the meaning of theorems &#x2013; when you see the simple proof the theorem itself seems obvious&#x2026;like loowoz!</p><p>alternate (new):</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=loowoz  LOC_AFTER=?
    
    * An alternate for the Linearity Axiom of the infinite-valued sentential
      logic (L-infinity) of Lukasiewicz, due to Barbara Wozniakowska, _Reports
      on Mathematical Logic_ 10, 129-137 (1978).  (Contributed by Mel L. O'Cat,
      8-Aug-2004.)
    
    1::pm2.86          |- (  ( ( ph -&gt; ps ) -&gt; ( ph -&gt; ch ) )
                          -&gt; ( ph -&gt; ( ps -&gt; ch ) ) )
    2::pm2.04          |- ( ( ph -&gt; ( ps -&gt; ch ) ) -&gt; ( ps -&gt; ( ph -&gt; ch ) ) )
    3::ax-2            |- (  ( ps -&gt; ( ph -&gt; ch ) )
                          -&gt; ( ( ps -&gt; ph ) -&gt; ( ps -&gt; ch ) ) )
    qed:1,2,3:3syl     |- (  ( ( ph -&gt; ps ) -&gt; ( ph -&gt; ch ) )
                          -&gt; ( ( ps -&gt; ph ) -&gt; ( ps -&gt; ch ) ) )
    $=  wph wps wi wph wch wi wi wph wps wch wi wi wps wph wch wi wi wps 
        wph wi wps wch wi wi wph wps wch pm2.86 wph wps wch pm2.04 wps wph 
        wch ax-2 3syl $. 
    $)
    </pre><p>old:</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=loowoz  LOC_AFTER=?
    
    * An alternate for the Linearity Axiom of the infinite-valued sentential
      logic (L-infinity) of Lukasiewicz, due to Barbara Wozniakowska, _Reports
      on Mathematical Logic_ 10, 129-137 (1978).  (Contributed by Mel L. O'Cat,
      8-Aug-2004.)
    
    1::ax-1            |- ( ps -&gt; ( ph -&gt; ps ) )
    2:1:imim1i         |- (  ( ( ph -&gt; ps ) -&gt; ( ph -&gt; ch ) )
                          -&gt; ( ps -&gt; ( ph -&gt; ch ) ) )
    qed:2:a2d          |- (  ( ( ph -&gt; ps ) -&gt; ( ph -&gt; ch ) )
                          -&gt; ( ( ps -&gt; ph ) -&gt; ( ps -&gt; ch ) ) )
    
    $=  wph wps wi wph wch wi wi wps wph wch wps wph wps wi wph wch wi 
        wps wph ax-1 imim1i a2d $. 
    $)
    </pre><p>&#x2014;</p><h1>Proposed Enhancements</h1><h1>1.</h1><p>Problem(s) to be solved:</p><ul><li>Unification Search not performed for steps containing work variables in their formula or their hypotheses' formulas</li><li>"Hint" feature does not take into account hypotheses, though it does process formulas containing work variables.</li><li>No "top-down" (forward) Hint feature available (e.g. from hypotheses A and B which assertions are available to derive another formula?)</li><li>The Unify+Get Hints feature just displays assertion labels, not their formulas.</li></ul><p>Solution: Replace Unify+Get Hints feature completely with a new step-specific (right(alt)-mouse button menu OR Ctrl-8) Unify+Step Selector dialog which presents available  unifying assertions for the step on which the input cursor is located, then allows the user to choose one, and then inserts the selected assertion label in the proof and finishes unification processing of the Proof Worksheet.</p><p>The Unify+Step Selector feature will work for any proof step containing a formula &#x2013; even if just a skeltal formula such as "|- &amp;W1" &#x2013; but of course cannot contain syntax errors or bogosities (it must pass the basic edits for a Proof Worksheet).</p><p>The unification search performed by Unify+Step Selector will return the set of Assertions that successfully unify with the selected step's Hyp entries and Formula. If the Hyp subfields include a "?" or incompleteness, such as ",1" then an any unifying Assertion with &gt;= the number of input Hypotheses will be considered (in this example, &gt;= 1). If there are no "?" or incomplete Hyp entries then <i>exactly</i> then only Assertion with exactly the number of input Hypotheses will be considered.</p><p>Here are the user-modifiable settings, which may be set via RunParm<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=RunParm">?</a> or the GUI as Unify menu sub-menu items:</p><ul><li>Max Results &#x2013; maximum number of unifying assertions returned.</li><li>Search Sequence &#x2013; may be Ascending or Descending database  sequence.</li><li>Display Sequence &#x2013; Database Sequence or Assertion conclusion  (not including hypotheses) formula length, Ascending or Descending; if formula length is chosen then the results will be assembled  using a Priority Queue, which means that every Assertion prior to the current theorem will be searched to return <i>just</i> the <i>Maximum</i> <i>Results</i> number of Assertions.</li><li>Show Substitutions &#x2013; On or Off. If "Off" then the Assertions will be displayed as they are in the input .mm file. If "Off" then the search results will show the formulas as they would be in the context of the current proof step <i>after</i> substitution by the unification algorithm. Note that "On" may tend to result in really long delays &#x2013; and Max Results ought to be set to some reasonably useful number to avoid encountering insufferable delays in some cases!</li></ul><p>One other requirement: the dialog window showing the unifiable Assertions for the current proof step <b>must</b> not be "modal", meaning that the user absolutely <i>must</i> be able to Alt-Tab back and forth between the dialog window and the Proof Assistant main window. This point is non-negotiable, even if it means turning the "dialog" into just an inquiry window and forcing the user to manually enter the chosen Assertion label in the Proof Worksheet (I don't expect to be "forced" to do this, but that would be a fallback position&#x2026;in the event that this Java "Swing" product turns out to, once again, be impenetrable to my mind&#x2026;)</p><p>Details below&#x2026;</p><p>In mmj.pa.ProofUnifier<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=ProofUnifier">?</a>.java#buildProofsAndErrorUnUnifiedSteps() error message "E-PA-0411 &#x2026; Unification Failure&#x2026;" is  generated for steps containing work variables in their formula or their hypotheses formulas and which have a blank Ref Ref field.</p><p>This gives the impression that a full Unification Search was performed, which is not true. The fact that E-PA-0411 specifically <i>says</i> that Unification Search is not performed in this situation is not a big help, because, frankly, it is a long error message and people tend not to read these things&#x2026; FURTHERMORE&#x2026;</p><p>It is occasionally the case that a user desires to perform Unification Search on a proof step containing work variables in spite of the fact that, due to the fact that work variables represent sub-expressions multiple matches are possible &#x2013; and the "wrong" matching assertion may be returned. For example, Step 3 below <i>ought</i> to have enough detail to result in a good match&#x2026;and probably Step 2, though it is less obvious at first glance. Then, once Step 2 and 3 were provided with "good" Ref labels, &amp;W1 would be resolved, and the rest of the proof would be handled automatically by the regular Unification Search!</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=pm2.18  LOC_AFTER=?
     
    * Proof by contradiction.  Theorem *2.18 of [WhiteheadRussell] p. 103.
      Also called the Law of Clavius.
     
    1::pm2.21          |- ( -. ph -&gt; ( ph -&gt; -. ( -. ph -&gt; ph ) ) )
    2:1:               |- ( &amp;W1 -&gt; ( -. ph -&gt; -. &amp;W1 ) )
    3:2:               |- ( &amp;W1 -&gt; ( &amp;W1 -&gt; ph ) )
    qed:3:             |- ( ( -. ph -&gt; ph ) -&gt; ph )
    $)
     </pre><hr /><p>Scenarios:</p><p>1A) Top-Down proving (aka "forward") where the user does not know the proof step formula or even the justifying  assertion.</p><p>Example 1A1 : user manually adds step 3 and presses Ctrl-8 (note that "&amp;W1" signifies <i>any</i> expression and that the user can be more  specific if the information is known &#x2013; such as "( ph &#x2192; &amp;W1 )".)</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=syl  LOC_AFTER=?
    h1::syl.1          |- ( ph -&gt; ps )
    h2::syl.2          |- ( ps -&gt; ch )
    3:2                |- &amp;W1
    qed::              |- ( ph -&gt; ch )
    $)
    </pre><p>The program builds a selector dialog showing all assertions (with database sequence number &lt; syl's) which have exactly one hypothesis that is unifiable with Step 2 (e.g. a1i and a2i). The user selects a1i and unification proceeds normally, replacing &amp;W1 with the formula resulting from unification  using the selected assertion:</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=syl  LOC_AFTER=?
    h1::syl.1          |- ( ph -&gt; ps )
    h2::syl.2          |- ( ps -&gt; ch )
    3:2:a1i            |- ( &amp;W2 -&gt; ( ps -&gt; ch ) )
    qed::              |- ( ph -&gt; ch )
    $)
     </pre><hr /><p>Example 1A2 : user manually adds step 3 and presses Ctrl-8:</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=syl  LOC_AFTER=?
    h1::syl.1          |- ( ph -&gt; ps )
    h2::syl.2          |- ( ps -&gt; ch )
    3:2,?              |- &amp;W1
    qed::              |- ( ph -&gt; ch )
    $)
    </pre><p>The program builds a selector dialog showing all assertions (with database sequence number &lt; syl's) which have &gt;= one hypothesis and at least one  hypothesis that is unifiable with Step 1 (e.g. ax-1, ax-2, ax-3, ax-mp, a1i and a2i). The user selects a1i and unification proceeds normally, replacing &amp;W1 with the formula resulting from unification  using the selected assertion:</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=syl  LOC_AFTER=?
    h1::syl.1          |- ( ph -&gt; ps )
    h2::syl.2          |- ( ps -&gt; ch )
    3:2:a1i            |- ( &amp;W2 -&gt; ( ps -&gt; ch ) )
    qed::              |- ( ph -&gt; ch )
    $)
     </pre><p>NOTE: The program will not automatically unify with/against previous proof steps as hypotheses for the selected assertion. If, for example, the user chose ax-mp for step 3, the following would result ("Derive" would generate one hypothesis and the user would have to tidy up):</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=syl  LOC_AFTER=?
    h1::syl.1          |- ( ph -&gt; ps )
    h2::syl.2          |- ( ps -&gt; ch )
    1003:?:            |- ( ( ps -&gt; ch ) -&gt; &amp;W1 )
    3:2,1003:ax-mp     |- &amp;W1
    qed::              |- ( ph -&gt; ch )
    $)
     </pre><hr /><p>1B) Bottom-Up proving (aka "backward") where the user knows the proof step formula &#x2013; which may or may not contain work variables &#x2013; but does not know the  the justifying assertion.</p><p>Example 1B1 : user manually adds inputs "?" in the 'qed' step's Hyp field, signifying an "Incomplete Hypotheses" situation where the Hyps are totally or partially unknown. Then Ctrl-8 is pressed.</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=syl  LOC_AFTER=?
    h1::syl.1          |- ( ph -&gt; ps )
    h2::syl.2          |- ( ps -&gt; ch )
    qed:?:             |- ( ph -&gt; ch )
    $)
    </pre><p>The program builds a selector dialog showing all assertions (with database sequence number &lt; syl's) which have &gt;= zero hypotheses which can be unified with the step's formula (e.g. ax-mp, a1i) Note: these are the "Hint" criteria, so this enhancement  provides a superior Hinting facility on top of  everything else! The user selects ax-mp and  unification proceeds normally &#x2013; which in this case means invoking "Derive", as follows:</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=syl  LOC_AFTER=?
    h1::syl.1          |- ( ph -&gt; ps )
    h2::syl.2          |- ( ps -&gt; ch )
    1002:?:            |- &amp;W1
    2002:?:            |- ( &amp;W1 -&gt; ( ph -&gt; ch ) )
    qed:1002,2002:ax-mp |- ( ph -&gt; ch )
    $)
    </pre><p>Note that the user now has the choice of either completing the proof manually or invoking  UnifyStepSelector<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=UnifyStepSelector">?</a> on steps 1002 and 2002. Or a combination of these actions could be tried -- for example: specify 1002's Hyp as "2" and  press Ctrl-8 to invoke UnifyStepSelector<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=UnifyStepSelector">?</a> (yielding choices a1i and a2i.)</p><hr /><p>The "Selector" dialog will be a scrollable list showing available matching assertions, something like this, using the "Unformatted" mode of TMFF (Text Mode Formula Formatting):</p><pre>    a1i: ph =&gt; ( ph -&gt; ps )
    a2i: ( ph -&gt; ( ps -&gt; ch ) ) ==&gt; ( ( ph -&gt; ps ) -&gt; ( ph -&gt; ch ) )
    syl: ( ph -&gt; ps ) &amp;&amp; ( ps -&gt; ch ) ==&gt; ( ph -&gt; ch ) 
     </pre><p>The user simply moves the "selection" cursor to the desired line and hits the "Select" button, or alternatively, just double-clicks the desires formula to make a selection. Nice!</p><hr /><p>P.S. I believe I have solved the "problem" of how to create a non-modal dialog (box) with this enhancement. The problem I faced was how to communicate the user's selection back to the process which is awaiting the answer so that it can proceed. Because the (Java) dialog is running in a separate thread, somehow the initiating thread must wait suspended in mid-air. Normally in a  situation like this a non-modal dialog has access to the main window frame and a selection triggers an  event, which can be applied elsewhere. But in my initial idea, the subroutine invoking the dialog is already  in a separate thread and itself has no access to the GUI.</p><p>So here is the solution: the GUI will have two "transactions", one (Ctrl-8) which triggers the process that creates the Step Selector dialog's display (of assertions which unify with the  step where the cursor is located), and a subsequent process which is initiated by the user's selection of an assertion from the dialog. In the first transaction the data is built and displayed, and in the second, the selected Ref label is passed by the GUI to the unification process for substitution into the Proof Worksheet.</p><p>The beauty of this solution, assuming that it works, is that the dialog window will remain available for a retry by the user! If the first selection is unsatisfactory, hit Ctrl-Z  twice to undo and select another. The only drawback to this is that because the user will be able to browse and modify the Proof Worksheet GUI screen, the contents of the dialog box may become "stale" and/or inappropriate if the user changes something manually &#x2013; but that proviso can be  communicated as a "don't".</p><p>One tricky aspect of this is that, suppose step 5 is the target of Step Selector and that Steps 1 &#x2192; 4 involve  either DeriveHyp<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=DeriveHyp">?</a>, DeriveFormula<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=DeriveFormula">?</a> or Work Variables. The Proof Assistant <i>must</i> perform the unification process to flesh out those proof steps <i>before</i> it generates the data for the Step Selector dialog. That is because  Step 5 might say, "5:2: |- blah-blah" and Step 2 might say just "2:1:a1i" (meaning DeriveFormula<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=DeriveFormula">?</a>). Again, this is a matter of communicating the processing features to the user and is not actually a drawback, just a minor complication.</p><p>P.P.S. Here is another (supposed) enhancement. I had planned to provide the user options for search sequence and display sequence, but now I see that asking the user to specify <i>how</i> the program does its job is  backwards. Instead, the user tells the program <i>what</i> s/he wants and the program figures out the best way to do the job. Specifically, there will be <b>one</b> RunParm<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=RunParm">?</a>/Menu Option for "SearchBy<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=SearchBy">?</a>", and it will have two options: Max/Min, and Key &#x2013; DbSequence<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=DbSequence">?</a>, (conclusion) Formula Length, or (I think), Total Formula Length (conclusion formula symbols plus logical hypotheses' symbols). The results will be displayed in the order the successful unification matches are found. So if Max is chosen then the results are in descending order of  the given key (with a 2nd key of DbSequence<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=DbSequence">?</a> to provide a unique key); if Min is chosen, the list is inverted.</p><p>A second enhancement is that when the user chooses a SearchBy<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=SearchBy">?</a> key other than DbSequence<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=DbSequence">?</a>, the Assertion list is pre-sorted by the chosen key. This provides superior performance (I think) because the program does not need to attempt unification against every assertion, it just needs to scan the list &#x2013; backwards if Max chosen, forwards if Min chosen &#x2013; and stop scanning once it has found the requested maximum number of Selection Items! Not only is a pre-sort (probably) much faster than having to attempt unification with every assertion in the database, but the sorted list can be reused during the user's session. And this simplifies the coding quite a bit, which is a good thing. --<a class="local" href="ocat">ocat</a> 28-Jan-2008</p><ul><li>The efficiency benefits of this are marginal, if not dubious: results are heavily dependent upon the user's Max Results setting, and assume that the user has set a low value which is actually reached during the scan. The main purpose of Max Results is to avoid a worst case scenario wherein a very "general" set of hypotheses/conclusion formulas force unification  against every assertion, resulting in a massive selection list of matches; the "normal" setting ought to be something like 50, which ought not be reached in normal use (depending on the user). But in "normal" use, if the Max Results number of matches is not reached, the search will continue through the entire set of assertions &#x2013; and if Max Results is set very low, say, 5, then it subverts its own purpose by obstructing the user's quest for information. In fact, the only truly beneficial &#x2013; hypothetical &#x2013; optimization would be to somehow sort the search candidates so that the most likely matches are processed earlier, on average, and I do not believe that a simple key sort can accomplish this (the exception would be a sort based on the number of logical hypotheses &#x2013; which would allow unsuitable assertions to be bypassed altogether in many specific instances.) --<a class="local" href="ocat">ocat</a><ul><li>OK, the least bad solution is best here. This is the way that it will be coded to start and we can experiment to see if it is satisfactory: the user gets no choice about the order the assertions are searched or the order that the matches are displayed. The only user option is Max Results. Search/Display order is by ascending number of logical hypotheses, followed by ascending database sequence number. Processing is most efficient in order by number  of assertion hypotheses (for internal processing reasons); and the display results will be most easily assimilable when presented in order from simplest match &#x2192; most complex match, which is at least a predictable order, and in most cases the simplest unifiable assertion is best. There is really no reason to make this any more complicated because the program has no special intelligence about either the "best" matching assertion or the odds favoring the unifiability of a given assertion (except to "fast fail" or reject a candidate based on database sequence number or number of logical hypotheses.) --<a class="local" href="ocat">ocat</a> 28-Jan-2008<ul><li>Another point to make about the benefits of this solution&#x2026; the worst-case scenario of unification results from the fact that mmj2 does not require a derivation step's hypotheses to be  specified in any order. With Work Variables the problem is  potentially severe because of "false" unifications, wherein a hypothesis step does unify with certain logical hypotheses, but these unifications are inconsistent with other hypotheses; in these cases all possible permutations must be tried, one by one, until exhaustion or success &#x2013; and exhaustion of the permutations is in the worst case N Factorial (n!), where N is the number of logical hypotheses (maximum N in set.mm is 19.) Sooooo&#x2026;with the solution in hand where we attempt unification of assertions with fewest hypotheses first, in the case where Max Results is set to a reasonable number, the assertion which can be examined fastest are examined first &#x2013; and this will, in some cases, avert a worst-case scenario (worst case is that the program spends long minutes, or even hours(!) processing one request -- and the user is forced to hit the Cancel button.) --<a class="local" href="ocat">ocat</a> 30-Jan-2008</li></ul></li></ul></li></ul><hr /><h1>2.</h1><p>When a RunParm<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=RunParm">?</a> encounters or triggers an error condition the message can be hard to see. These errors may result from changes to the input RunParms<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=RunParms">?</a>.txt file or changes to the input .mm file, including Metamath syntax errors or proof verification errors. To assist the user in problem diagnosis and resolution it would be helpful if mmj2 produced a GUI error message screen instead of "taking a dump" on the screen.</p><p>Proposal: Add a new "GUI,on" RunParm<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=RunParm">?</a> &#x2013; default = "on" and modify the "BatchMMJ<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=BatchMMJ">?</a>2" process to display a GUI "prompt" window with an "OK" button for mmj2 application specific errors (not for NullPointerException<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=NullPointerException">?</a> type of errors though!) When the user presses "OK" the normal mmj2 process continues, including the dumping of error messages to the screen (for completeness sake :-) On the other hand, if "GUI,off" is in use, which would be the case during batch regression testing then the GUI prompt window would not be displayed.</p><p>This is an easy change. Quick and good.</p><p>Note that the GUI prompt window will not appear if the  BatchMMJ<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=BatchMMJ">?</a>2 Java version check fails, meaning that the mmj2 program requires a more recent version of Java than what is present on the user's machine. Also, if the RunParms<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=RunParms">?</a>.txt file is not found or cannot be opened there will be no GUI prompt window. (The gist of this paragraph is that if mmj2 itself cannot get started properly then there is no GUI&#x2026;)</p><hr /><p>New "beta" version of mmj2 uploaded with the "Step Selector Search" enhancement! Not rigorously tested yet, and user-satisfaction ratings have not been tabulated, but in my opinion, this is a "must have" capability &#x2013; absolutely great stuff. Give a try: <a class="url outside" href="http://us2.metamath.org:8888/ocat/mmj2/mmj2Beta20080401a.zip">http://us2.metamath.org:8888/ocat/mmj2/mmj2Beta20080401a.zip</a>. Note: the zip contains a README.txt with what you need to know, plus a mmj2.jar file, and a directory containing all of the new and changed .java source code files. There are no RunParm<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=RunParm">?</a> or other changes needed, just plop the new mmj2.jar into your environment and fire it up! --<a class="local" href="ocat">ocat</a> 4-Feb-2008</p><ul><li>If anyone has negative feedback speak up. I may have some free time this month and I am thinking of this: 1) remove Unify/Get Hints (redundant); 2) add pop-up message for start-up failure; 3) roll out the release w/effective date of March 1 instead of April 1. There are undoubtedly other enhancements which could be imagined, but what we have now is great and I recommend moving forward with alacrity. --<a class="local" href="ocat">ocat</a> 5-Feb-2008</li></ul><h4>Feedback:  unification lockups</h4><p>(This is a general mmj2 issue, not related specifically to the beta.)</p><p>Suppose we are developing a proof and have gotten to this point:</p><pre> $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=xxx  LOC_AFTER=?
 1::ax-1            |- ( &amp;W1 -&gt; ( &amp;W2 -&gt; &amp;W1 ) )
 2::ax-2            |- (  ( &amp;W7 -&gt; ( &amp;W4 -&gt; &amp;W7 ) )
                       -&gt; ( ( &amp;W7 -&gt; &amp;W4 ) -&gt; ( &amp;W7 -&gt; &amp;W7 ) ) )
 3::ax-1            |- ( &amp;W7 -&gt; ( &amp;W4 -&gt; &amp;W7 ) )
 4:3,2:ax-mp        |- ( ( &amp;W7 -&gt; &amp;W4 ) -&gt; ( &amp;W7 -&gt; &amp;W7 ) )
 5::ax-2            |- (  ( ( &amp;W7 -&gt; &amp;W4 ) -&gt; ( &amp;W7 -&gt; &amp;W7 ) )
                       -&gt; (  ( ( &amp;W7 -&gt; &amp;W4 ) -&gt; &amp;W7 )
                          -&gt; ( ( &amp;W7 -&gt; &amp;W4 ) -&gt; &amp;W7 ) ) )
 6:4,5:ax-mp        |- (  ( ( &amp;W7 -&gt; &amp;W4 ) -&gt; &amp;W7 )
                       -&gt; ( ( &amp;W7 -&gt; &amp;W4 ) -&gt; &amp;W7 ) )
 qed:?: |- ( ( ph -&gt; ps ) -&gt; ( ( ch -&gt; ph ) -&gt; ( ch -&gt; ps ) ) )
 $)</pre><p>Then we realize, oops, step 4 should be "4:2,3:ax-mp" and not "4:3,2:ax-mp". But after we make this correction, the proof is "stuck" because the work variables now have the wrong patterns.</p><p>If we ctrl-z all the way back, which could have been a long time ago, we will lose all the work we did in the meantime.</p><p>On the other hand, if we completely erase the proof's formulas by hand:</p><pre> $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=xxx  LOC_AFTER=?
 1::ax-1
 2::ax-2
 3::ax-1
 4:2,3:ax-mp
 5::ax-2
 6:4,5:ax-mp
 qed:?: |- ( ( ph -&gt; ps ) -&gt; ( ( ch -&gt; ph ) -&gt; ( ch -&gt; ps ) ) )
 $)</pre><p>then press ctrl-u, everything is magically corrected to exactly what I want to see:</p><pre> $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=xxx  LOC_AFTER=?
 1::ax-1            |- ( &amp;W1 -&gt; ( &amp;W2 -&gt; &amp;W1 ) )
 2::ax-2            |- (  ( &amp;W3 -&gt; ( &amp;W4 -&gt; &amp;W5 ) )
                       -&gt; ( ( &amp;W3 -&gt; &amp;W4 ) -&gt; ( &amp;W3 -&gt; &amp;W5 ) ) )
 3::ax-1            |- (  (  ( &amp;W3 -&gt; ( &amp;W4 -&gt; &amp;W5 ) )
                          -&gt; ( ( &amp;W3 -&gt; &amp;W4 ) -&gt; ( &amp;W3 -&gt; &amp;W5 ) ) )
                       -&gt; (  &amp;W6
                          -&gt; (  ( &amp;W3 -&gt; ( &amp;W4 -&gt; &amp;W5 ) )
                             -&gt; ( ( &amp;W3 -&gt; &amp;W4 ) -&gt; ( &amp;W3 -&gt; &amp;W5 ) ) ) ) )
 4:2,3:ax-mp        |- (  &amp;W6
                       -&gt; (  ( &amp;W3 -&gt; ( &amp;W4 -&gt; &amp;W5 ) )
                          -&gt; ( ( &amp;W3 -&gt; &amp;W4 ) -&gt; ( &amp;W3 -&gt; &amp;W5 ) ) ) )
 5::ax-2            |- (  (  &amp;W6
                          -&gt; (  ( &amp;W3 -&gt; ( &amp;W4 -&gt; &amp;W5 ) )
                             -&gt; ( ( &amp;W3 -&gt; &amp;W4 ) -&gt; ( &amp;W3 -&gt; &amp;W5 ) ) ) )
                       -&gt; (  ( &amp;W6 -&gt; ( &amp;W3 -&gt; ( &amp;W4 -&gt; &amp;W5 ) ) )
                          -&gt; ( &amp;W6 -&gt; ( ( &amp;W3 -&gt; &amp;W4 ) -&gt; ( &amp;W3 -&gt; &amp;W5 ) ) ) ) )
 6:4,5:ax-mp        |- (  ( &amp;W6 -&gt; ( &amp;W3 -&gt; ( &amp;W4 -&gt; &amp;W5 ) ) )
                       -&gt; ( &amp;W6 -&gt; ( ( &amp;W3 -&gt; &amp;W4 ) -&gt; ( &amp;W3 -&gt; &amp;W5 ) ) ) )
 qed:?: |- ( ( ph -&gt; ps ) -&gt; ( ( ch -&gt; ph ) -&gt; ( ch -&gt; ps ) ) )
 $)</pre><p>This shows that mmj2 inherently has the ability to recover from such mistakes. However, erasing all the proof's formulas to recover from such mistakes is tedious to do by hand. Annoying even. :)</p><p>I would be happier if there were an option that simply erases the entire wff content. Or at least resets work variables back to their "most general" state. This will give me the freedom to experiment without fear that an accidental bad unification will lock up the proof.</p><p>How do other people feel about this? &#x2013; <a class="local" href="norm">norm</a> 6 Feb 2008</p><ul><li>After erasing formulas on non-'qed' derivation steps which have Ref's already, the user would hit Ctrl-U to rederive the formulas, so we can just combine the two functions with a Unify menu option, "Rederive Formulas + Unify". This can be coded as a Proof Worksheet pre-processing editing function to keep the logic simple and orthogonal to all of the other features, such as your "#" LocalRef<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=LocalRef">?</a> feature, etc.<ul><li>I am also thinking about removing the Alternate Refs feature which produces an info message for a step which has a non-unifying Ref -- it is redundant now that the Step Selector Search is available. But, the $d error search for alternates <i>should</i> be retained (if you recall it does a unification search looking for a Ref which has no $d errors or which reduces the severity from "hard" to "soft".) I would like to eliminate that too just to simplify the code but the service it provides, though very rarely used, is really nice. --<a class="local" href="ocat">ocat</a></li></ul></li></ul><hr /><p>I just added a new way to initiate the Unify/Step Selector Search feature: double-click on a derivation proof step!</p><p>I <i>had</i> been saving the double-click action for something really special, but as I was reviewing the Proof Assistant Tutorial it came to me that this was <i>It</i>. (Often doing  documentation produces new ideas because the requirement to explain something motivates the lazy programmer to make the documentation shorter and easier to write.)</p><p>So we'll still have the Unify Menu, and Ctrl-8, and the  Pop-up (step-specific) menu as ways to initiate the Step Selector Search, but we will also have the ever popular "double-click"!</p><p>This is especially nice and symmetric because the Step Selector Dialog accepts a double-click as the signal to "Select" and apply the selection to the proof&#x2026;and unify. So basically, it will be possible to prove a theorem with a double-clicking fiesta; like monkeys hyped on caffeine and sugar, just double-click away until, one day, accidentally(?), a proof appears! Ha. --<a class="local" href="ocat">ocat</a> 16-Feb-2008</p></div><div class="footer"><hr /><span class="gotobar bar"><a class="local" href="HomePage">HomePage</a> <a class="local" href="RecentChanges">RecentChanges</a> </span><span class="edit bar"><br /> <a class="edit" accesskey="e" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=mmj2ProofAssistantFeedback20080217">Edit this page</a> <a class="history" href="http://planetx.cc.vt.edu/AsteroidMeta?action=history;id=mmj2ProofAssistantFeedback20080217">View other revisions</a> <a class="admin" href="http://planetx.cc.vt.edu/AsteroidMeta?action=admin;id=mmj2ProofAssistantFeedback20080217">Administration</a></span><span class="time"><br /> Last edited 2008-02-18 01:22 UTC by <a class="author" title="from 66-81-75-111.bayarea.dialup.o1.com" href="ocat">ocat</a> <a class="diff" href="http://planetx.cc.vt.edu/AsteroidMeta?action=browse;diff=1;id=mmj2ProofAssistantFeedback20080217">(diff)</a></span><form method="get" action="http://planetx.cc.vt.edu/AsteroidMeta" enctype="application/x-www-form-urlencoded">
<p>Search: <input type="text" name="search"  size="20" accesskey="f" /> <input type="submit" name="dosearch" value="Go!" /></p></form></div>
</body>
</html>
