<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head><title>AsteroidMeta: mmj2ProofAssistantFeedback</title><link type="text/css" rel="stylesheet" href="wiki.css" /><meta name="robots" content="INDEX,NOFOLLOW" /><link rel="alternate" type="application/rss+xml" title="AsteroidMeta" href="index.html@action=rss" /><link rel="alternate" type="application/rss+xml" title="AsteroidMeta: mmj2ProofAssistantFeedback" href="http://planetx.cc.vt.edu/AsteroidMeta?action=rss;rcidonly=mmj2ProofAssistantFeedback" /></head><body class="http://planetx.cc.vt.edu/AsteroidMeta"><div class="header"><span class="gotobar bar"><a class="local" href="HomePage">HomePage</a> <a class="local" href="RecentChanges">RecentChanges</a> </span><h1><a title="Click to search for references to this page" href="http://planetx.cc.vt.edu/AsteroidMeta?search=mmj2ProofAssistantFeedback">mmj2ProofAssistantFeedback</a></h1></div><div class="content browse"><p>Back to: <a class="local" href="mmj2">mmj2</a></p><h1>note about the wiki</h1><p>NOTE: To update the wiki your "username" must be whitelisted. Send an email to the wikilord if you are not already a user – and, if you don't care to do that, I authorize you to post as "ocat" for the purposes of mmj2 feedback and problem reports, etc. (Just put some initials on your edits so I know who is doing what…)</p><p>ALSO, you may get the "Cannot acquire main lock" error message when attempting to post to the wiki. In this case, hit the Back button on your browser, open a new window and go to <a class="local" href="RecentChanges">RecentChanges</a> then click on Administration, then Unlock Wiki. Wait, and then return to your original post and click on "submit" again.</p><h1>other links</h1><p>Previous Version of Feedback: <a class="local" href="mmj2ProofAssistantFeedback20080217">mmj2ProofAssistantFeedback20080217</a></p><p>(Complaints about other aspects of mmj2 &#x2013; general grievances -- should go here: <a class="local" href="mmj2Feedback">mmj2Feedback</a> )</p><h1>Feedback About the mmj2 Proof Assistant GUI</h1><h1>Windows</h1><p>Complaint Number 1: 17-Feb-2008 &#x2013; <a class="local" href="ocat">ocat</a> </p><ul><li>Request for TMFF Reformat triggers Save with Yes/No/Cancel  dialog box. I do not think a reformat should trigger a Save dialog. (Originally it seemed more drastic but now that the Edit/Undo (Ctrl-Z) is available a simple reformat is not a big deal.)</li><li>When a TMFF Reformat request is made and the proof is new, and changes have been made, the whole File Name dialog is invoked, and after going through the humongous hassle of saving the file&#x2026;it seems like the reformat isn't done! Dagnabbit. (This is a low-level bug with the obvious workaround of just saving and then doing another reformat. So no quick Patch .jar upload just for this thing.)</li></ul><p>Complaint Number 2: 19-Feb-2008 --<a class="local" href="ocat">ocat</a> </p><ul><li>Extra &#x2013; empty &#x2013; selection lines at the end of the results in the Step Selector Dialog would allow the list to be scrolled down so that the bottom selection line could be displayed at the very top of the dialog. This would be helpful because it is handy to be able to move the dialog down so that the  Proof Worksheet can be viewed simultaneously.</li></ul><p>Complaint Number 6: 27-Feb-2008 --<a class="local" href="ocat">ocat</a></p><p>File/New Proof or File/New Next Proof create a  "skeleton" proof with the 'qed' step as follows:</p><pre>    qed::     |- blah blah blah
    </pre><p>This is "ok", but really it would be better to output the 'qed' step as:</p><pre>    qed:?:    |- blah blah blah
    </pre><p>This is better because a) an hypothesis is nearly always going to be necessary, unless the new theorem is simply an instance of a previous theorem, which is uncommon at most; and b) with "?" in the Hyp field, the new Step Selector Search can be used immediately just by double-clicking the 'qed' step &#x2013; instead of requiring the user to enter  <i>something</i> in the 'qed' Hyp field just to get some results.</p><p>By the way, the new Step Selector Search feature is almost identical to the enhancement that Norm requested at least twice. He wanted a "hint" type of feature where the  program would show, for a step, only the possible unifying assertions for that step &#x2013; in other words, there would be no "invalid" inputs, which is the way the Metamath Solitaire program works. Unfortunately, I couldn't get my head wrapped around Norm's request until the Work Variables enhancement was written, along with the new "StepUnifier<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=StepUnifier">?</a>" for unifications involving work variables. Also, I needed <a class="local" href="fl">fl</a>s request implemented for having the mmj2 program be aware of the input cursor's location. In the end, my code converged to what Norm was asking for (with a couple of generalizing tweaks.) So, I really can't take credit for any of the inventions in the newest version of mmj2!</p><hr /><h1>Mac Issues (Apple J2SE 5.0 Release 4)</h1><p>The good news is that my iMac Mini, circa 2007/$599, which runs 1.6GHz Intel Core Duo (2 processors) with 512MB RAM completes Proof Assistant startup in about 9 seconds vs. about 16 seconds on my HP desktop, circa 2001/$1100, which runs a 1.8 GHz Intel Celeron with 256 MB RAM (DDR SDRAM).</p><p>It is difficult to say how much of the 50% (approx) speed-up is attributable to the Java Runtime Environment's extensive built-in use of multi-threading, which, one hopes is distributing the load automatically across both processors. It may be that the OSX operating system and the iMac in general have less overhead than the XP system. And, that the iMac has more memory and overall uses more advanced hardware, is no doubt a positive. Anyway&#x2026;this is interesting and good news. I would be interested in hearing about your experiences on a modern XP or Vista machine running on Intel Core Duo.</p><p>Whatever&#x2026;</p><p>In the problems category:</p><p>Complaint Number 3: 25-Feb-2008 --<a class="local" href="ocat">ocat</a> </p><ul><li>The "alt" key is the iMac "option" key, and this is ineffectual for the Edit Menu on the Proof Assistant. I surmise that the Terminal utility has co-opted the Option key for its own  purposes.</li><li>It may be that this is fixed in <a class="url outside" href="http://developer.apple.com/releasenotes/Java/Java104R5RN/ResolvedIssues/chapter_3_section_5.html">J2SE 5.0 Releases 5</a>.</li></ul><p>Complaint Number 4: 25-Feb-2008 --<a class="local" href="ocat">ocat</a> </p><ul><li>Setting the Proof Text Columns and formula length maximum to 100 (from 80) via the startup RunParms<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=RunParms">?</a> without changing the default font size of 14, produces a different result on  the iMac: the Proof Text Area window is output as just two lines long! This is, I think, because the line length is bigger than the Frame size with the given font size. In order to make this work, the font size needs to be decreased to 12 when the number of columns is increased. With bigger LCD screens these days it is reasonable to use 100 column displays. (I alse turn off "bold" to make it look better. You may wish to change the TMFF Format Number in the start-up RunParms<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=RunParms">?</a>. I'm liking 10 these days.)</li></ul><p>Complaint Number 5: 25-Feb-2008 --<a class="local" href="ocat">ocat</a> </p><ul><li>Ctrl-8 invokes the Step Selector Search but <b>also</b> inserts an "8" in the Proof Text! That is wrong and definitely  incompatible with the Sun Java 1.5. The "workaround" to this, and I guess Ctrl-9, is to not use Ctrl-8 or Ctrl-9. Double-click instead of Ctrl-8ing and use the Unify/Reshow Step Selector Dialog menu item (or just move the dialog off to the side manually instead of "hiding" it.)</li><li>It may be that this is fixed in <a class="url outside" href="http://developer.apple.com/releasenotes/Java/Java104R5RN/ResolvedIssues/chapter_3_section_5.html">J2SE 5.0 Releases 5</a>.</li></ul><p>Complaint Number 7: 3-Mar-2008 --<a class="local" href="ocat">ocat</a> </p><ul><li>Message text not line wrapped on call to Yes/No/Cancel Dialog Box &#x2013; another Apple incompatibility, though perhaps fixed by more up-to-date version of Java on OS-X.</li></ul><p>Complaint Number 8: 3-Mar-2008 --<a class="local" href="ocat">ocat</a> </p><ul><li>File types allowed in File/Save As dialog not displayed properly (another incompatibility between Apple and Sun.</li></ul><p>Complaint Number 9: 3-Mar-2008 --<a class="local" href="ocat">ocat</a> </p><ul><li>There appear to be a lot of differences between the  Sun and Apple implementations of the Java "Swing" classes (Swing is the GUI framework layered on top of their original AWT GUI classes.) So far the "bugs" in the Sun version have been mere annoyances and do not prevent the mmj2 Proof Assistant GUI from functioning. HOWEVER&#x2026; assuming that the mmj2 software can be released for use with OS-X without running the parallel/regression tests is unwarranted. Next release run the parallel/ regression tests on the iMac and perform file compares to ensure that the full suite of mmj2 tests performs flawlessly on OS-X &#x2013; until that is done people should be advised to use mmj2 using Sun's Java and to regard other implementations of Java as experimental with respect to mmj2.</li></ul><hr /><p>In the "Not a problem" category, the issue I had with the ProofAsstFolder<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=ProofAsstFolder">?</a> RunParm<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=RunParm">?</a> turns out to be my bad&#x2026; Assume logon as user "Me", with mmj2jar stored in directory "A". Then in Utilities program Terminal, the startup directory is "Me". (And using "pushd A/mmj2jar" takes you into the mmj2jar directory.) The RunParms<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=RunParms">?</a>.txt ProofAsstFolder<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=ProofAsstFolder">?</a> option just needs to be updated (manually) like this:</p><pre>    ProofAsstFolder,A/mmj2jar/myproofs
    </pre><p>So the whole problem was me not understanding what I was doing on the iMac&#x2026; and I still haven't learned how to write a script to startup mmj2, and I am starting up the mmj2 by copying the execution line from mmj2.bat and pasting it into the terminal window, and pressing return:</p><pre>    java -Xincgc -Xms64M -Xmx128M -jar mmj2.jar RunParms.txt
    </pre><p>So, mmj2 basically works but needs some fine tuning on the iMac running OSX.</p><p>--<a class="local" href="ocat">ocat</a> 27-Feb-2008</p><hr /><h1>Reentrant Sub-Proof Prover for Proof Steps</h1><p>Here is a fairly elegant (proposed) enhancement with user-controlled ambitions: a re-entrant proof step "sub-proof" prover available via right-mouse click or menu key (designated step at the input cursor location), with parameters controllable by the user: 1) max search depth; 2) breadth or depth first search. The re-entrant sub-proof prover would use the given proof step's hypotheses as the hypotheses for the sub-proof, with the restriction that neither the given proof step or its hypotheses can be "in error". If successful, the sub-proof's derivation would be inserted into the  current proof. This enhancement is difficult and ambitious but it would, at least, be worthy of the attempt (and it can be coded with all new code or be tightly integrated into existing logic.)</p><p>The key idea here is to restrict the prover search tree to something that is manageable and user-controlled. By restricting the hypotheses which may be considered for a proof step to those specified on the proof step, the number of combinations which must be examined is reduced, and furthermore, the work of figuring out which previous proof steps are irrelevant to the current step is put in the user's hands.</p><p>So consider how this would work for proof step "99"</p><pre>    h1::  |- blah blah
    90:?: |- blah blah 
    
    99:1,90: |- blah blah
    </pre><p>The user specified "1,90" for step 99 and then right-mouse clicks proof step 99 and selects "prove" (or uses a menu option while leaving the input cursor on step 99). If the prover finds a proof of step 99 using either 1 or 90, or both or neither, the derivation is inserted into the current proof and step 99 is automatically updated with the Ref and actual hypotheses used. If no proof is found, the user can retry the operation with a deeper search depth, and perhaps switch from breadth-first searching to depth-first.</p><p>Sounds great, huh? No?</p><p>Well&#x2026; This feature can be used for the 'qed' step of a proof. That is, to generate an entire proof. But that will really only be helpful for simple proofs, especially those at the start of a Metamath database (e.g. set.mm or ql.mm) &#x2013; as the number of theorems to be searched grows, and as the number of proof steps increases (max depth), the algorithm will bog down in the combinatorial explosion of possibilities. However, for individual proof steps guided by a knowledgeable user the reentrant subproof generator will be very helpful and will reduce the amount of work &#x2013; as well as minimizing rote memorization of theorems, letting the user focus on the math instead of the label names in the Metamath database.</p><p>Here are the parameters which I foresee as possibly being useful to users:</p><ul><li>Max-depth : how many proof steps can be generated</li><li>Max-Search Label : restricts proof search to assertions occuring prior to equal to the given label (enables user to  restrict the proof search to, for example, just predicate or propositional logic and thereby drastically reduce the  combinatorial explosion of search possibilities thereby increasing the likelihood of actually returning a result :-)</li><li>Breadth vs. Depth First : searching across the theorem database for short proofs, or going deeply into each unifiable assertion looking for a derivation.</li><li>Max Hypotheses : restriction on the number of hypotheses of assertions to be tested.</li><li>Stop at First Proof Found vs. Find Shortest : meaning that if Find Shortest is selected then all possibilities must be checked (uh oh&#x2026;)</li><li>Search Time Limit In Seconds : How long to continue searching.</li><li>Max-Tasks : How many concurrent step proof search tasks to employ.</li></ul><p>As I consider this programming task, I see that there is a "short-cut" which employs the existing unification algorithm in mmj2, mmj.pa.StepUnifier<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=StepUnifier">?</a>.java. However, this would  restrict the search to a single search execution path &#x2013; no  concurrent searches for alternative proofs. Given the  fact that multi-core computers with shared memory access are now the norm, a concurrent approach would be far better even if it means additional coding work (better to write code just once.)</p><p>I also foresee: </p><ul><li>using a pipeline approach to scheduling the various searches as well as in delivering the results (it is yet to be determined whether or not this would  blow-out available memory and how to avoid such a debacle)</li><li>the benefits of using a Dialog pane so that the multitude of parameters and necessary commands can be centralized for ease of use.</li><li>will want both a cancel and pause button in addition to "prove"</li><li>the desireability of coding (my) Step Prover as an interface and providing a RunParm<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=RunParm">?</a> to instantiate the implementation class object so that a different prover can be be used.</li></ul><p>Any feedback, questions or constructive criticism? I think this is the only enhancement worth doing &#x2013; at least it seems worth doing even if, as usual, I don't get paid :-) Perhaps that is the essence of "open source", that you do what you do because you gotta do what you gotta do&#x2026;</p><hr /><p>OK, I am "officially" beginning this project, which I will call "Step Prover" (highly imaginative :0-)</p><p>I expect it to be ready for your use within six months, at the latest, and my hope/goal target date is 1-Feb-2009 but I cannot know for sure until I devise the search algorithm and the new unification algorithm &#x2013; as well as the multi-threading control mechanism :-)</p><p>My first task is to write an incredibly long document which will likely never be read, but will, I think, help me to avoid design and coding errors.</p><p>--<a class="local" href="ocat">ocat</a> 03-Oct-2008 </p></div><div class="footer"><hr /><span class="gotobar bar"><a class="local" href="HomePage">HomePage</a> <a class="local" href="RecentChanges">RecentChanges</a> </span><span class="edit bar"><br /> <a class="edit" accesskey="e" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=mmj2ProofAssistantFeedback">Edit this page</a> <a class="history" href="http://planetx.cc.vt.edu/AsteroidMeta?action=history;id=mmj2ProofAssistantFeedback">View other revisions</a> <a class="admin" href="http://planetx.cc.vt.edu/AsteroidMeta?action=admin;id=mmj2ProofAssistantFeedback">Administration</a></span><span class="time"><br /> Last edited 2008-10-03 19:26 UTC by <a class="author" title="from pool-96-249-204-163.snfcca.dsl-w.verizon.net" href="ocat">ocat</a> <a class="diff" href="http://planetx.cc.vt.edu/AsteroidMeta?action=browse;diff=1;id=mmj2ProofAssistantFeedback">(diff)</a></span><form method="get" action="http://planetx.cc.vt.edu/AsteroidMeta" enctype="application/x-www-form-urlencoded">
<p>Search: <input type="text" name="search"  size="20" accesskey="f" /> <input type="submit" name="dosearch" value="Go!" /></p></form></div>
</body>
</html>
