<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head><title>AsteroidMeta: metamathProofAssistantMetadata</title><link type="text/css" rel="stylesheet" href="wiki.css" /><meta name="robots" content="INDEX,NOFOLLOW" /><link rel="alternate" type="application/rss+xml" title="AsteroidMeta" href="index.html@action=rss" /><link rel="alternate" type="application/rss+xml" title="AsteroidMeta: metamathProofAssistantMetadata" href="http://planetx.cc.vt.edu/AsteroidMeta?action=rss;rcidonly=metamathProofAssistantMetadata" /></head><body class="http://planetx.cc.vt.edu/AsteroidMeta"><div class="header"><span class="gotobar bar"><a class="local" href="HomePage">HomePage</a> <a class="local" href="RecentChanges">RecentChanges</a> </span><h1><a title="Click to search for references to this page" href="http://planetx.cc.vt.edu/AsteroidMeta?search=metamathProofAssistantMetadata">metamathProofAssistantMetadata</a></h1></div><div class="content browse"><p>NOTE: This is <b>proposed</b>.</p><p>Here is my latest conception, a format for "batch" proof assistant input that would be input inside a .mm file!</p><p>The idea takes advantage of the "&lt;MM&gt;" metadata comment content used with "&lt;MODULE&gt;", as implemented recently:</p><pre>    $( &lt;MM&gt; &lt;MODULE&gt; &lt;ID&gt;LOGICB&lt;/ID&gt; &lt;PREREQ&gt; &lt;/PREREQ&gt; &lt;/MODULE&gt; &lt;/MM&gt; $)</pre><p>The idea would look like this in practice in the optimal case where the user has  entered all information necessary to specify a proof &#x2013; all step labels and hypothesis references:</p><pre>    ${
      a1i.1 $e |- ph $.
      a1i   $p |- ( ps -&gt; ph ) 
            $=
        wph wps wph wi a1i.1 wph wps ax-1 ax-mp $.
        $( [?] $) $( [24-Sep-05] $)
      $( &lt;MM&gt; &lt;PROOF&gt;
         1:     a1i.1  |- ph                       $.
         2:     ax-1   |- ( ph -&gt; ( ps -&gt; ph ) )   $.
         3:1,2  ax-mp  |- ( ps -&gt; ph )             $.
         &lt;/PROOF&gt; &lt;/MM&gt;
      $)
    $}</pre><p>Each step begins with a number delimited by a ":", with hypothesis references (perhaps optional?, depending on the skill of the proof assistant), followed by a label (also perhaps, optional), followed by a formula, followed by "$.".</p><p>The way I see it working is that a student wishing to do proofs would enter just a "?" proof step in the "$=" section of a theorem, and then follow the theorem statement with a "$( &lt;MM&gt; &lt;PROOF&gt; &#x2026;" comment. Then, when either proof assistant or verify proof is called upon AND the proof is incomplete BUT is followed by a PROOF metadata comment, the enhanced proof assistant would attempt to construct a real Metamath proof.</p><p>In theory the student might not know the step labels to input, but the proof assistant might be able to derive them, assuming the formulas are correct. That would be the primary benefit of using this format &#x2013; not having to memorize 6000 different labels, as we have in set.mm alone. It would be a tremendous programming challenge also. But in mmj2, given that each statement is parsed, the top level syntax label is known, and that limits the search (if top level syntax label is "wi" then we're looking for a label which also has a "wi" at the top level, or has just a  variable of the same type, (i.e. as with ax-mp.)</p><p>The experiment above demonstates the concept and shows how Metamath.exe stored the real proof, leaving the metadata proof comment intact. Of course, I had to enter the proof the old way&#x2026;</p><p>Obviously, this is nothing fancy or especially brilliant. But it is a first step towards a friendlier GUI proof assistant. Once a batch interface and algorithm has been tested, the way would be clear to running a proof assistant program in server mode and responding to input.</p><p>The nice thing also, is that now that the "&lt;MM&gt;" comment tag has been staked out &#x2013; a precedent set &#x2013; the way is open to using that same  idea for Proof Assistant, as well as other things that may not presently fit into the scheme for metamath.exe but may be add-ons used elsewhere, thus enhancing Metamath's usefulness.</p><p>--<a class="local" href="ocat">ocat</a> 24-Sep-2005</p></div><div class="footer"><hr /><span class="gotobar bar"><a class="local" href="HomePage">HomePage</a> <a class="local" href="RecentChanges">RecentChanges</a> </span><span class="edit bar"><br /> <a class="edit" accesskey="e" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=metamathProofAssistantMetadata">Edit this page</a> <a class="history" href="http://planetx.cc.vt.edu/AsteroidMeta?action=history;id=metamathProofAssistantMetadata">View other revisions</a> <a class="admin" href="http://planetx.cc.vt.edu/AsteroidMeta?action=admin;id=metamathProofAssistantMetadata">Administration</a></span><span class="time"><br /> Last edited 2005-09-25 01:39 UTC by <a class="author" title="from dialup-4.243.146.123.Dial1.SanFrancisco1.Level3.net" href="ocat">ocat</a> <a class="diff" href="http://planetx.cc.vt.edu/AsteroidMeta?action=browse;diff=1;id=metamathProofAssistantMetadata">(diff)</a></span><form method="get" action="http://planetx.cc.vt.edu/AsteroidMeta" enctype="application/x-www-form-urlencoded">
<p>Search: <input type="text" name="search"  size="20" accesskey="f" /> <input type="submit" name="dosearch" value="Go!" /></p></form></div>
</body>
</html>
