<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head><title>AsteroidMeta: mmj2ProofDerivationMethods</title><link type="text/css" rel="stylesheet" href="wiki.css" /><meta name="robots" content="INDEX,NOFOLLOW" /><link rel="alternate" type="application/rss+xml" title="AsteroidMeta" href="index.html@action=rss" /><link rel="alternate" type="application/rss+xml" title="AsteroidMeta: mmj2ProofDerivationMethods" href="http://planetx.cc.vt.edu/AsteroidMeta?action=rss;rcidonly=mmj2ProofDerivationMethods" /></head><body class="http://planetx.cc.vt.edu/AsteroidMeta"><div class="header"><span class="gotobar bar"><a class="local" href="HomePage">HomePage</a> <a class="local" href="RecentChanges">RecentChanges</a> </span><h1><a title="Click to search for references to this page" href="http://planetx.cc.vt.edu/AsteroidMeta?search=mmj2ProofDerivationMethods">mmj2ProofDerivationMethods</a></h1></div><div class="content browse"><p>Regrettably, the new mmj2 Step Selector Search feature is not a magical cure for every proof derivation attempt.</p><p>I find the proof of pm2.61 difficult, and mmj2 is not very helpful! In desperation I pulled out the old fashioned method of Fitch's Subordinated Derivations to see just how hard it would be to work out pm2.61 by hand. Once I abandoned pen and paper and turned to my text editor I was able to crank this out  pretty fast (below). I think I did it correctly, but I don't see how to turn it into a Metamath proof! I've used the Fitch method before and been able to translate into Metamath, but this one is stumping me.</p><h1>pm2.61 |- ( ( ph -&gt; ps ) -&gt; ( ( -. ph -&gt; ps ) -&gt; ps ) )</h1><pre>     1  |   | ph -&gt; ps                                  * hyp int
     2  |   --
     3  |   |   | -. ph -&gt; ps                           * hyp int
     4  |   |   --
     5  |   |   |   | -. ps                             * hyp int
     6  |   |   |   --   
     7  |   |   |   |   | -. ph                         * hyp int
     8  |   |   |   |   --
     9  |   |   |   |   | -. ph -&gt; ps                   * 3 reit
    10  |   |   |   |   | ps                            * 7,9 mp
    11  |   |   |   |   | -. ps                         * 5 reit
    12  |   |   |   | -. -. ph                          * 7-&gt;11 neg int
    13  |   |   |   | ph                                * 13 neg elim
    14  |   |   |   | ph -&gt; ps                          * 1 reit
    15  |   |   |   | ps                                * 13,14 mp
    16  |   |   | -. -. ps                              * 5-&gt;15 neg int
    17  |   |   | ps                                    * 16 neg elim
    18  |   | ( -. ph -&gt; ps ) -&gt; ps                     * 3,17 imp int
    19  | ( ph -&gt; ps ) -&gt; ( ( -. ph -&gt; ps ) -&gt; ps )     * 1,18 imp int
             </pre><p>Any ideas?</p><hr /><p>Each hypothesis in this proof can be instantiated to form a stand-alone theorem, such as ( ph &#x2192; ph ) for the first hypothesis, which means that in principle the propositional calculus version of the weak deduction theorem <a class="url outside" href="http://us.metamath.org/mpegif/dedt.html">dedt</a> / <a class="url outside" href="http://us.metamath.org/mpegif/elimh.html">elimh</a> can be used. See the <a class="url outside" href="http://us.metamath.org/mpegif/mmdeduction.html">Deduction Theorem</a> page. In practice this would lead to a long proof (as the <a class="url outside" href="http://us.metamath.org/mpegif/con3th.html">con3th</a> example shows, compared to the manually-created proof <a class="url outside" href="http://us.metamath.org/mpegif/con3.html">con3</a>).</p><p>Alternately, the algorithm for the standard deduction theorem, e.g. as described in Margaris, could be applied. That would lead to an even longer proof, possibly even several thousand steps in this case, since the proof length grows exponentially as hypotheses are popped. See the paragraph I wrote starting with "I worked this out" on <a class="local" href="WhyAreMetamathProofsSoShort">WhyAreMetamathProofsSoShort</a> for an illustration of the exponential behavior.</p><p>Another approach is to forget about trying to translate the deduction but instead write down the truth table for the tautology, then apply the algorithm of the completeness theorem (also described in Margaris). I actually did this a long time ago for the proof of theorem <a class="url outside" href="http://us.metamath.org/mpegif/meredith.html">meredith</a>, using a program I wrote to implement the algorithm, after being completely stumped on how to even begin to approach such a nonintuitive and cryptic theorem. Over time I found shorter and shorter versions of various pieces of it, until it evolved into the proof that's there now.</p><p>Also, there are proofs generated by resolution-based provers. While the resolution algorithm is clever and finds predicate calculus proofs that other automated methods cannot, they are in essence proofs by contradiction, which I often find to be less intuitive than direct proofs.</p><p>Anyway, those are possible general approaches to the problem that are guaranteed to work (since propositional calculus is decidable). As for specific clever ideas for translating this particular deduction efficiently, I'll defer that to someone who is clever. :) &#x2013; <a class="local" href="norm">norm</a></p><hr /><p>I find your approaches deeply interesting. The fact that Hilbert-style proofs and the "natural" approach embodied in Fitch's Subordinated Derivations are so profoundly different and yet reasonable, is fascinating to me. I wonder if there is a way to write a Proof Assistant based on Fitch which can interface back to the mmj2 Proof Assistant and create a proof (and maybe if the algorithm encounters problems then that would signify the need to add theorems/ inferences to set.mm.)</p><dl class="quote"><dt /><dd>You may want to check out Lifschitz's <a class="url outside" href="http://www.cs.utexas.edu/users/vl/papers/calc.ps">On Calculational Proofs</a> (PS file). The idea is that with appropriate inference rules, Hilbert-style proofs are not necessarily inefficient compared natural deduction proofs. This is what set.mm essentially does. There is also some related discussion in <a class="local" href="metamathCalculationalProofs">metamathCalculationalProofs</a> and <a class="local" href="WhyAreMetamathProofsSoShort">WhyAreMetamathProofsSoShort</a>. I do think with the right inference rules a reasonable natural deduction "translator" could be made. By "reasonable" I mean generates proofs that are not in general astronomically sized. Such proofs could then be used as a starting point to shorten by hand.</dd></dl><p>Anyway&#x2026;the Step Selector Search proved its worth this morning!</p><p>OK, once I looked at this differently, as an inference --</p><pre>    h1 |- ( ph -&gt; ps )
    h2 |- ( -. ph -&gt; ps )
    qed |- ps
    </pre><p>And after another look at the set.mm proof of pm2.61, I added a dummy proof step to the Proof Worksheet:</p><pre>    10:? |- ( ( ph -&gt; ps ) -&gt; ( ( -. ph -&gt; ps ) -&gt; &amp;W1 ) )
    </pre><p>and pressed Ctrl-8 to initiate the Step Selector Search. The Step Selector Dialog showed me that using pm2.37 instead of the existing set.mm proof's pm2.36 would eliminate an extra two Derivation Steps! So here is the new shortened proof of pm2.61:</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=pm2.61  LOC_AFTER=?
    1::pm2.37          |- ( ( ph -&gt; ps ) -&gt;
                            ( ( -. ph -&gt; ps ) -&gt; ( -. ps -&gt; ps ) ) )
    2::pm2.18          |- ( ( -. ps -&gt; ps ) -&gt; ps )
    qed:1,2:syl6       |- ( ( ph -&gt; ps ) -&gt;
                            ( ( -. ph -&gt; ps ) -&gt; ps ) )
    $)</pre><h1>shorter proof of ja</h1><p>I set the 'qed' step Hyp to "1,?", like this:</p><pre>    qed:1,?        |- ( ( ph -&gt; ps ) -&gt; ch )
    </pre><p>and pressed Ctrl-8 to initiate the Step Selector Search. It showed that pm2.61d1 would yield the 'qed' step with  additional hypothesis:</p><pre>    ( ( ph -&gt; ps ) -&gt; ( ph -&gt; ch ) ) 
    </pre><p>This hypothesis is easily derived from hypothesis 2, so I double-clicked pm2.61d1 on the Step Selector Dialog screen to accept the Ref and unify. The proof easily followed:</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=ja  LOC_AFTER=?
    h1::ja.1           |- ( -. ph -&gt; ch )
    h2::ja.2           |- ( ps -&gt; ch )
    3:2:imim2i         |- ( ( ph -&gt; ps ) -&gt; ( ph -&gt; ch ) )
    qed:3,1:pm2.61d1    
                       |- ( ( ph -&gt; ps ) -&gt; ch )
    $=  wph wps wi wph wch wps wch wph ja.2 imim2i ja.1 pm2.61d1 $. 
    $)
    </pre><h1>syld shorter proof</h1><p>This one is just obvious&#x2026;</p><p>Requires moving mpd ahead of syld.</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=syld  LOC_AFTER=?
    
    * Syllogism deduction.  (The proof was shortened by Mel L. O'Cat,
      7-Aug-2004.)
    
    h1::syld.1         |- ( ph -&gt; ( ps -&gt; ch ) )
    h2::syld.2         |- ( ph -&gt; ( ch -&gt; th ) )
    3:2:imim2d         |- ( ph -&gt; ( ( ps -&gt; ch ) -&gt; ( ps -&gt; th ) ) )
    qed:1,3:mpd        |- ( ph -&gt; ( ps -&gt; th ) )
    
    $=  wph wps wch wi wps wth wi syld.1 wph wch wth wps syld.2 imim2d 
        mpd $. 
    $)
    </pre><h1>hbimd -- A challenge</h1><p><a class="url outside" href="http://us2.metamath.org:8888/mpegif/hbimd.html">existing proof of hbimd</a> &#x2013; This proof is masterful and clever. I find it difficult to accept that there is no "better" and shorter proof. If that is true, then given hbimd's location within the first 5% of set.mm, then the difficulty level increases exponentially &#x2013; and if that is true then the world has greatly underestimated the value of the content of Metamath and set.mm (to say nothing of ql.mm).</p><p>Shorter and/or "better" (more direct and elegant) proof of hbimd, anyone?</p><p>--<a class="local" href="ocat">ocat</a> 1-Mar-2008</p><p>Here is the "skeleton" of the might hbimd:</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=hbimd  LOC_AFTER=?
    
    * Deduction form of bound-variable hypothesis builder ~ hbim .
    
    h1::hbimd.1        |- ( ph -&gt; A. x ph )
    h2::hbimd.2        |- ( ph -&gt; ( ps -&gt; A. x ps ) )
    h3::hbimd.3        |- ( ph -&gt; ( ch -&gt; A. x ch ) )
    
    qed:?              |- ( ph -&gt; ( ( ps -&gt; ch ) -&gt; A. x ( ps -&gt; ch ) ) )
    $)
    </pre><p>And deep thought hath availeth me naught. So&#x2026; what about without the "ph", which is a bit of a red  herring in this mystery story? Can we do this? Or why not? If so, does it help?</p><p>There is such a critter already in set.mm, called "hbim". Curiously, it uses hbimd in its own proof. Here is a shorter proof of hbim which steals hbimd's trick with ja for its own use &#x2013; and which does not use hbimd, thus enabling the shift down in set.mm of hbimd to where it is actually needed.</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=hbim  LOC_AFTER=?
     
    * If ` x ` is not free in ` ph ` and ` ps ` , it is not free in
      ` ( ph -&gt; ps ) ` .
     
    h1::hb.1           |- ( ph -&gt; A. x ph )
    h2::hb.2           |- ( ps -&gt; A. x ps )
    3:1:hbne           |- ( -. ph -&gt; A. x -. ph )
    4::pm2.21          |- ( -. ph -&gt; ( ph -&gt; ps ) )
    5:3,4:19.21ai      |- ( -. ph -&gt; A. x ( ph -&gt; ps ) )
    6::ax-1            |- ( ps -&gt; ( ph -&gt; ps ) )
    7:2,6:19.21ai      |- ( ps -&gt; A. x ( ph -&gt; ps ) )
    qed:5,7:ja         |- ( ( ph -&gt; ps ) -&gt; A. x ( ph -&gt; ps ) )
     
    $=  wph wps wph wps wi vx wal wph wn wph wps wi vx wph vx hb.1 hbne 
        wph wps pm2.21 19.21ai wps wph wps wi vx hb.2 wps wph ax-1 19.21ai 
        ja $. 
    $)
     </pre><hr /><h1>Even shorter proof of 19.20</h1><p>Requires moving 19.20i and friend 19.20ii  ahead of 19.20 (they don't depend on 19.20.)</p><p>NOTE: I used RunParm<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=RunParm">?</a>.txt command "LoadEndpointStmtLabel<a class="edit" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=LoadEndpointStmtLabel">?</a>,wsbc" to dramatically reduce startup time because I am working  on the theorems before wsbc (about 1.1 sec on iMac).</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=19.20  LOC_AFTER=?
     
    1::id              |- ( ( ph -&gt; ps ) -&gt; ( ph -&gt; ps ) )
    2:1:a4sd           |- ( ( ph -&gt; ps ) -&gt; ( A. x ph -&gt; ps ) )
    3:2:19.20i         |- ( A. x ( ph -&gt; ps ) -&gt; A. x ( A. x ph -&gt; ps ) )
    4::ax-5            |- ( A. x ( A. x ph -&gt; ps ) -&gt; ( A. x ph -&gt; A. x ps ) )
    qed:3,4:syl        |- ( A. x ( ph -&gt; ps ) -&gt; ( A. x ph -&gt; A. x ps ) )
     
    * OLD $=  wph wps wi vx wal wph vx wal wps wi vx wal wph vx wal wps vx wal 
        wi wph wps wi wph vx wal wps wi vx wph wps wi vx wal wph wps wph vx
        wal wph wps wi vx ax-4 wph vx ax-4 syl5 a5i wph wps vx ax-5 syl 
        $. 
    $=  wph wps wi vx wal wph vx wal wps wi vx wal wph vx wal wps vx wal 
        wi wph wps wi wph vx wal wps wi vx wph wps wi wph wps vx wph wps wi
        id a4sd 19.20i wph wps vx ax-5 syl $. 
    $)
     </pre><h1>19.2 in most general form</h1><p>I came across this, which I am calling 19.2y, after independently reinventing 19.8a :-)</p><p>We could really just change 19.2 as everything, including the proof is the same except that we use y for x in one spot.</p><p>I think this is a more interesting form of 19.2 because it helps to illustrate the mysteries of metavariables.</p><pre>    $( &lt;MM&gt; &lt;PROOF_ASST&gt; THEOREM=19.2y  LOC_AFTER=?
     
    * Theorem 19.2 of [Margaris] p. 89., in most general form
     
    1::19.8a           |- ( ph -&gt; E. y ph )
    qed:1:a4s          |- ( A. x ph -&gt; E. y ph )
     
    $=  wph wph vy wex vx wph vy 19.8a a4s $. 
    $)
     </pre><h1>More of Mel L. O'Cat's Pioneering Proof-Shortening Techniques :-)</h1><p>re: <a class="url outside" href="http://us2.metamath.org:8888/mpegif/1p1e2.html">( 1 + 1 ) = 2</a></p><p>Proof-shortening is not only a fun hobby, it is a worthwhile pasttime for students of Metamath. Shortening existing proofs in say, set.mm, requires the student to review and re-think existing theorems. The goal forces this, and the hair-pulling frustration is also a powerful motivator (IMO suffering is a precondition of progress.) Also, optimizing set.mm is  interesting in its own right because shorter proofs tend to represent "clarity of thought"; though often they just seem tricky, the shorter proof derivation techniques are idiomatic artifacts of the user's system and are potentially reuseable.</p><p>1) When re-proving, say, theorem "xyz", it may be helpful to prove a clone of the theorem &#x2013; "xyzTEMP", plus renames of any hypotheses. Leave the LOC_AFTER field blank on the mmj2 Proof Assistant GUI to instruct mmj2 to treat the clone as an addition at the end of set.mm, and thus allows for theorems occurring after "xyz" to be used in unification. Because set.mm is arranged linearly but is actually a two-dimensional tree of derivations, in some cases a useful theorem can be moved toward the beginning and used in re-proving an existing theorem.</p><p>2) One annoyance in the mmj2 Proof Assistant GUI is that Unification Search, which inserts unifying assertion label in proof steps, is not performed for steps which contain Work Variables (or "?" in the Hyp). The reason is that Unification Searches involving Work Variables and missing hypotheses can return many answers, and furthermore, the answers interact with other proof steps. Unification Searching with Work Variables amounts to solving a 3-D system of equations, in the most general case. In specific instances the user knows that there is only one correct answer but the program is not gifted with the intelligence to know that.</p><p>To get around this "problem" use the Step Selector Search (Ctrl-8 or double-click proof step) to display the Step Selector Results dialog page and then select the appropriate assertion. This will probably be faster and easier than manually updating the proof step formula to eliminate the Work Variables.</p></div><div class="footer"><hr /><span class="gotobar bar"><a class="local" href="HomePage">HomePage</a> <a class="local" href="RecentChanges">RecentChanges</a> </span><span class="edit bar"><br /> <a class="edit" accesskey="e" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=mmj2ProofDerivationMethods">Edit this page</a> <a class="history" href="http://planetx.cc.vt.edu/AsteroidMeta?action=history;id=mmj2ProofDerivationMethods">View other revisions</a> <a class="admin" href="http://planetx.cc.vt.edu/AsteroidMeta?action=admin;id=mmj2ProofDerivationMethods">Administration</a></span><span class="time"><br /> Last edited 2008-04-01 20:59 UTC by <a class="author" title="from 66-81-74-252.bayarea.dialup.o1.com" href="ocat">ocat</a> <a class="diff" href="http://planetx.cc.vt.edu/AsteroidMeta?action=browse;diff=1;id=mmj2ProofDerivationMethods">(diff)</a></span><form method="get" action="http://planetx.cc.vt.edu/AsteroidMeta" enctype="application/x-www-form-urlencoded">
<p>Search: <input type="text" name="search"  size="20" accesskey="f" /> <input type="submit" name="dosearch" value="Go!" /></p></form></div>
</body>
</html>
