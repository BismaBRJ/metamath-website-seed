<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head><title>AsteroidMeta: antecedents</title><link type="text/css" rel="stylesheet" href="wiki.css" /><meta name="robots" content="INDEX,NOFOLLOW" /><link rel="alternate" type="application/rss+xml" title="AsteroidMeta" href="index.html@action=rss" /><link rel="alternate" type="application/rss+xml" title="AsteroidMeta: antecedents" href="http://planetx.cc.vt.edu/AsteroidMeta?action=rss;rcidonly=antecedents" /></head><body class="http://planetx.cc.vt.edu/AsteroidMeta"><div class="header"><span class="gotobar bar"><a class="local" href="HomePage">HomePage</a> <a class="local" href="RecentChanges">RecentChanges</a> </span><h1><a title="Click to search for references to this page" href="http://planetx.cc.vt.edu/AsteroidMeta?search=antecedents">antecedents</a></h1></div><div class="content browse"><p>When I develop a proof I rarely have the courage to abandon an antecedent in the list of antecedents because I'm never sure I won't need this antecedent later. However very often I realize that I've kept many antecedents I could have dropped sooner because they reveal themselves irrelevant but in that case I'm often too much bored by the proof or too much tired to remake the proof and clean the unnecessary antecedents.</p><p>Therefore (as Alexander likes to say):</p><p>Would it be possible to have a routine or a script which removes the antecedents  for me (either in metamath or in mmj2) or a way to highlight the never used  antecedents or any clever device which would help me in this fastidious task. &#x2013; <a class="local" href="fl">fl</a> 11-May-2008</p><p>One challenge in fulfilling your request is that  an antecedent in a WFF might in some cases be needed for Unification, and therefore, after the "cleansing" operation is completed you would be left with a bogus proof or subproof. On the other hand, if an antecedent is merely a needless subtree in a unification substitution "payload" of a WFF then erasing the antecedent from all locations in the proof would have no ill effects.</p><p>There is one feature that might do exactly what you want in some cases. It was added in the recent release at Norm's request and is found on the  Unification Menu:</p><ul><li>Unify+Erase and Rederive Formulas &#x2013; Same as 'Unify (check proof)', but before the unification process  begins the formula is erased on every non-qed Derivation  Step which has a Ref label; if there are no errors the 'Derive' feature will rederive the formulas.</li></ul><p>An alternative, low tech for sure, is Edit/Copy the entire Proof Worksheet, paste into a separate text editor which has a Search/Replace function, make the fix-up changes, and then paste the text back into mmj2 &#x2013; mmj2 maintains no "state information" about the work in progress, so you can paste anything into the main GUI window and start over at any time (mmj2 does maintain a "next" index number used for forward and backward paging requests.) </p><dl class="quote"><dt /><dd>I've always been thinking that <em>walking</em> is a good workaround for <em>car</em>. :-) Look that (I was checking what a <em>workaround</em> is) it's a specific  American institution ("the bulletin board") in a famous school  ("MIT"). Emotion ! : [<a class="url number" href="http://fr.wikipedia.org/wiki/Image:Infinite-corridor-bboard.jpeg"><span><span class="bracket">[</span>1<span class="bracket">]</span></span></a>] &#x2013; <a class="local" href="fl">fl</a><dl class="quote"><dt /><dd>I never walk anymore, except in circles around my swimming pool while I read. It is too dangerous because of the gangs of gunmen wearing police uniforms :-) Seriously, mon cher, if I had spare cogitons and life force I would write you a prover, then you wouldn't have to worry about details like this! --<a class="local" href="ocat">ocat</a><dl class="quote"><dt /><dd><em>Swimming</em> is as well a good workaround for <em>boat</em>. Well this problem seems a bit less difficult than proving a theorem automatically. I think there could an answer, even a partial (but interesting) answer. &#x2013; <a class="local" href="fl">fl</a><dl class="quote"><dt /><dd>My first suggestion, re: the "Unify+Erase And Rederive Formulas" function is very good at making the useless bits go away &#x2013; but it doesn't help if the formulas in question do not have a justifying Ref. I do like enhancement ideas, but&#x2026; this mmj2 Swiss Army Knife will always be seen as inadequate when what you really need  is an electric chainsaw or an atom bomb :-) A total rewrite is in order, but I am just a poor American struggling to survive  in the global economy, and I have no corporate benefactors&#x2026;(((weeping, sobbing, whining, gnashing of teeth&#x2026;)))<dl class="quote"><dt /><dd>I must remember you that Americans are the most <em>Favoured Race in the Struggle for Life</em> and when one compares the vitality of computer industry in the States with what exists in France one regrets to have chosen the bad country to be born. Courage! &#x2013; <a class="local" href="fl">fl</a><dl class="quote"><dt /><dd>It is not the US vs. France but the Corporations vs. People :-) You should not judge us by our politicians and television propaganda. (Many of us don't even know where France is :-) --<a class="local" href="ocat">ocat</a></dd></dl></dd></dl></dd></dl></dd></dl></dd></dl></dd></dl><h3>Workaround for the metamath program</h3><p>Unfortunately, there is currently no automated way to drop redundant antecedents or even identify them. You still have to look at the final proof manually to find the places where they aren't needed, then revise those parts of the proof by hand.</p><p>Like <a class="local" href="ocat">ocat</a> suggests, the "Unify+Erase And Rederive Formulas" can be a good way to repair proofs in mmj2. In terms of future mmj2 features, thinking about what might be helpful to assist the general problem of "proof repair" could be useful.</p><p>For the metamath program, there is a script that I often use to assist this and other proof-repair tasks. The following script, "makeproof.cmd", when run inside of "MM-PA&gt;" for a completed proof, will generate a script "p.tmp" that will regenerate the proof from scratch.</p><pre>  set width 999
  open log p.tmp
  show new_proof
  close log
  set width 79
  tools
  match p.tmp $ y
  delete p.tmp "" =
  delete p.tmp " " ""
  add p.tmp "assign last " " /no_unify"
  reverse p.tmp
  exit</pre><p>Let's look at how to use it, taking the example syl:</p><pre>  MM&gt; prove syl
  MM-PA&gt; submit makeproof.cmd</pre><p>This will generate a file p.tmp that will have commands to build the syl proof. To erase and regenerate the whole proof, type the following:</p><pre>  MM-PA&gt; delete all
  MM-PA&gt; submit p.tmp</pre><p>In practice, I will extract a section of p.tmp to rebuild the part of a proof section I deleted for revision. For example, suppose I want to move an "adantl" 3 steps later in the proof (i.e. 3 steps earlier in the proof building). I'll delete the proof section at the point where the new adantl will be added and extract from p.tmp the commands to rebuild that section. In the extracted p.tmp section, I'll move the adantl up 3 steps.</p><p>It takes some practice to identify the necessary lines in p.tmp based on the pattern of label assignments. Usually I will have a listing of the original proof in another window for reference. To save time, often I'll identify just the first place in p.tmp that I need, and copy from it to the end of file. After the necessary lines from the p.tmp script complete the proof, the extra lines just cause harmless error messages that can be ignored.</p><p>I always save the proof ("save new_proof") just before submitting a p.tmp section so that I can easily recover ("q/f", "prove"). A simple error, like being one line off, can make a mess of the proof.</p><p>By no means is this an ideal solution, but it is just a way to save time in a lot of cases when I need to rewrite proofs to make them shorter. Whether it is worth doing depends on the situation. If I just need to re-enter 5 steps, it's quicker to type them in, but for 50 steps, a section extracted from p.tmp can save a lot of time.</p><p>By the way, I always drop redundant antecedents in the official set.mm sections to obtain shorter proofs, even if it is a lot of work, and I strongly encourage you to do that. If you are too tired or too bored, then at least put a note in the comment indicating that the proof has or might have redundant antecedents that need to be dropped. This way, someone else (like me, if I'm making a sandbox proof "official") will know that the proof needs to be cleaned up. Without such a comment, I would have to assume that every proof needs to be cleaned up, even if it already has been, and that wastes a lot of my time. &#x2013; <a class="local" href="norm">norm</a> 14 May 2008</p><p>OK Thank you Norm and Ocat for this help it is not what I hope but I understand this problem is not exactly trivial either. &#x2013; <a class="local" href="fl">fl</a> 19 May 2008</p></div><div class="footer"><hr /><span class="gotobar bar"><a class="local" href="HomePage">HomePage</a> <a class="local" href="RecentChanges">RecentChanges</a> </span><span class="edit bar"><br /> <a class="edit" accesskey="e" title="Click to edit this page" href="http://planetx.cc.vt.edu/AsteroidMeta?action=edit;id=antecedents">Edit this page</a> <a class="history" href="http://planetx.cc.vt.edu/AsteroidMeta?action=history;id=antecedents">View other revisions</a> <a class="admin" href="http://planetx.cc.vt.edu/AsteroidMeta?action=admin;id=antecedents">Administration</a></span><span class="time"><br /> Last edited 2008-05-19 17:43 UTC by <a class="author" title="from ATuileries-151-1-60-230.w83-202.abo.wanadoo.fr" href="ocat">ocat</a> <a class="diff" href="http://planetx.cc.vt.edu/AsteroidMeta?action=browse;diff=1;id=antecedents">(diff)</a></span><form method="get" action="http://planetx.cc.vt.edu/AsteroidMeta" enctype="application/x-www-form-urlencoded">
<p>Search: <input type="text" name="search"  size="20" accesskey="f" /> <input type="submit" name="dosearch" value="Go!" /></p></form></div>
</body>
</html>
